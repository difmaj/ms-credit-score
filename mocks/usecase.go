// Code generated by MockGen. DO NOT EDIT.
// Source: /home/alisson-arus/projects/ms-credit-score/internal/pkg/router/middleware/middleware.go

// Package mock is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/difmaj/ms-credit-score/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockIUsecase is a mock of IUsecase interface.
type MockIUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockIUsecaseMockRecorder
}

// MockIUsecaseMockRecorder is the mock recorder for MockIUsecase.
type MockIUsecaseMockRecorder struct {
	mock *MockIUsecase
}

// NewMockIUsecase creates a new mock instance.
func NewMockIUsecase(ctrl *gomock.Controller) *MockIUsecase {
	mock := &MockIUsecase{ctrl: ctrl}
	mock.recorder = &MockIUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUsecase) EXPECT() *MockIUsecaseMockRecorder {
	return m.recorder
}

// ClaimsJWT mocks base method.
func (m *MockIUsecase) ClaimsJWT(token string) (*domain.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClaimsJWT", token)
	ret0, _ := ret[0].(*domain.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClaimsJWT indicates an expected call of ClaimsJWT.
func (mr *MockIUsecaseMockRecorder) ClaimsJWT(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClaimsJWT", reflect.TypeOf((*MockIUsecase)(nil).ClaimsJWT), token)
}
